/* eslint-disable */
import { type NextPage } from "next";
import Head from "next/head";
import { useMutation, useQuery } from "react-query";
import { postViagem } from "~/api/mutations";
import React, { useState } from "react";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import FoodPicker from "~/components/FoodPicker";
import Swal from "sweetalert2";

const validationSchema = Yup.object({
  destino: Yup.string().required("Destino is required"),
  valor: Yup.number().required("Valor is required"),
});

const Home: NextPage = () => {
  const mutation = useMutation(postViagem, {
    onSuccess() {
      Swal.fire({
        title: "Viagem criada com sucesso!",
        icon: "success",
        confirmButtonText: "Ok",
        
      });
    },
    onError() {
      alert("Erro ao criar viagem!");
    }

  });

  const [foodQuantities, setFoodQuantities] = useState<{
    [key: string]: number;
  }>({
    burger: 0,
    salad: 0,
  });

  const foodPrices = {
    burger: 5.99,
    salad: 8.99,
  };

  const calculateTotalPrice = () => {
    let total = 0;
    for (const food in foodQuantities) {
      // @ts-ignore
      total += foodQuantities[food] * foodPrices[food];
    }
    return total;
  };

  const necessities = () => {
    const foodQuantitiesList: string[] = Object.entries(foodQuantities)
      .filter(([, quantity]: any) => quantity > 0)
      .map(([food]) => food);

    const valor = calculateTotalPrice();

    return { foodQuantitiesList, valor };
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b ">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-black sm:text-[5rem]">
            Chefes do Kazambast√£o
          </h1>
          <div className="mb-4 w-2/3 rounded border bg-white px-8 pb-8 pt-6 shadow-lg">
            <h1 className="mb-6 text-2xl font-bold tracking-tight">
              Criar Pedido:
            </h1>
            <Formik
              initialValues={{
                destino: "",
                valor: 0,
              }}
              validationSchema={validationSchema}
              onSubmit={(values, actions) => {
                const { foodQuantitiesList, valor } = necessities();

                mutation.mutate({
                  ...values,
                  valor,
                  items: foodQuantitiesList,
                });

                actions.setSubmitting(false);
                actions.resetForm(); // Reset form fields

                setFoodQuantities({
                  // Reset food quantities
                  burger: 0,
                  salad: 0,
                });
              }}
            >
              {({ isSubmitting }) => (
                <Form className="flex flex-col">
                  <div className="mb-4">
                    <label
                      htmlFor="destino"
                      className="mb-2 block text-sm font-bold text-gray-700"
                    >
                      Destino:
                    </label>
                    <Field
                      id="destino"
                      name="destino"
                      placeholder="Destino"
                      className="focus:shadow-outline w-full appearance-none rounded border px-3 py-2 leading-tight text-gray-700 shadow focus:outline-none"
                    />
                    <ErrorMessage
                      name="destino"
                      className="text-xs italic text-red-500"
                    />
                  </div>

                  <FoodPicker
                    foodQuantities={foodQuantities}
                    setFoodQuantities={setFoodQuantities}
                  />
                  <div className="flex items-center justify-between">
                    <button
                      type="submit"
                      disabled={isSubmitting}
                      className="focus:shadow-outline rounded bg-gradient-to-r from-green-400 to-blue-500 px-4 py-2 font-bold text-white hover:from-pink-500 hover:to-yellow-500 focus:outline-none"
                    >
                      Criar Viagem
                    </button>
                  </div>
                </Form>
              )}
            </Formik>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
